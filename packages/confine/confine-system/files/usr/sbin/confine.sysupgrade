#!/bin/sh

SAVE_CONFIG=0
HELP=0

CONFFILES=/tmp/conf.files
CONF_TAR=/tmp/conf.tgz

while [ -n "$1" ]; do
    case "$1" in
        -b) SAVE_CONFIG=1;;
        -h|--help) HELP=1; break;;
        -*)
            echo "Invalid option: $1"
            exit 1
        ;;
        *) break;;
    esac
    shift;
done

[ -z "$*" -o $HELP -gt 0 ] && {
    cat <<EOF
Usage: $0 [options] <gzipped image file> [<device>]

Options:
    -b           backup the configuration files
    -h / --help  display this help

<device> defaults to /dev/sda.

EOF
    exit 1
}

IMAGE=$1
RAM_ROOT=/tmp/root
DEVICE=${2:-/dev/sda}

ldd() { LD_TRACE_LOADED_OBJECTS=1 $*; }
libs() { ldd $* | awk '{print $3}'; }

install_file() { # <file> [ <file> ... ]
    for file in "$@"; do
        dest="$RAM_ROOT/$file"
        [ -f $file -a ! -f $dest ] && {
            dir="$(dirname $dest)"
            mkdir -p "$dir"
            cp $file $dest
        }
    done
}

install_bin() { # <file> [ <symlink> ... ]
    src=$1
    files=$1
    [ -x "$src" ] && files="$src $(libs $src)"
    install_file $files
    [ -e /lib/ld-linux.so.3 ] && {
        install_file /lib/ld-linux.so.3
    }
    shift
    for link in "$@"; do {
        dest="$RAM_ROOT/$link"
        dir="$(dirname $dest)"
        mkdir -p "$dir"
        [ -f "$dest" ] || ln -s $src $dest
    }; done
}

pivot() { # <new_root> <old_root>
    mount | grep "on $1 type" 2>&- 1>&- || mount -o bind $1 $1
    mkdir -p $1$2 $1/proc $1/sys $1/dev $1/tmp && \
    mount -o move /proc $1/proc && \
    pivot_root $1 $1$2 || {
        umount $1 $1
        return 1
    }

    mount -o move $2/sys /sys
    mount -o move $2/dev /dev
    mount -o move $2/tmp /tmp
    mount -o move $2/overlay /overlay 2>&-
    return 0
}

run_ramfs() { # <command> [...]
    install_bin /bin/busybox /bin/ash /bin/sh /bin/mount /bin/umount    \
        /sbin/pivot_root /usr/bin/wget /sbin/reboot /bin/sync /bin/dd   \
        /bin/grep /bin/cp /bin/mv /bin/tar /usr/bin/md5sum "/usr/bin/[" \
        /bin/vi /bin/ls /bin/cat /usr/bin/awk /usr/bin/hexdump          \
        /bin/sleep /bin/zcat /usr/bin/bzcat /usr/bin/printf /usr/bin/wc \
        /bin/mkdir

    install_file /etc/resolv.conf

    pivot $RAM_ROOT /mnt || exit 5

    mount -o remount,ro /mnt
    umount -l /mnt

    grep /overlay /proc/mounts > /dev/null && {
        mount -o remount,ro /overlay
        umount -l /overlay
	}

    exec /bin/busybox sh -c "$*"
}

kill_remaining() { # [ <signal> ]
    local sig="${1:-TERM}"
    local stat
    for stat in /proc/[0-9]*/stat; do
        [ -f "$stat" ] || continue

        local pid name state ppid rest
        read pid name state ppid rest < $stat
        name="${name#(}"; name="${name%)}"

        local cmdline
        read cmdline < /proc/$pid/cmdline

        [ -n "$cmdline" ] || continue
        case "$name" in
            *ash*|*init*|*watchdog*|*ssh*|*dropbear*|*telnet*|*login*|*hostapd*|*wpa_supplicant*) : ;;
            *)
                if [ $pid -ne $$ ] && [ $ppid -ne $$ ]; then
                    kill -$sig $pid 2>/dev/null
                fi
            ;;
        esac
    done
}

add_conffiles() {
    ( find $(sed -ne '/^[[:space:]]*$/d; /^#/d; p' \
        /etc/sysupgrade.conf /lib/upgrade/keep.d/* 2>/dev/null) \
        -type f 2>/dev/null;
      opkg list-changed-conffiles ) | sort -u > "$1"
    return 0
}

kill_remaining TERM
sleep 4
kill_remaining KILL

grep /cgroup /proc/mounts > /dev/null && umount /cgroup
grep /home /proc/mounts > /dev/null && umount /home

if [ -b ${DEVICE}4 ]; then
    [ -f /rom/etc/config/fstab ] && cp /rom/etc/config/fstab /tmp/fstab ||\
        cp /etc/config/fstab /tmp/fstab
    run_ramfs "dd if=$DEVICE of=/tmp/mbr.bin bs=512 count=1
zcat \"$IMAGE\" | dd of=$DEVICE bs=4096 conv=fsync
dd if=/tmp/mbr.bin of=$DEVICE bs=1 count=64 skip=446 seek=446
sync
mount /dev/sda1 /mnt
cp /tmp/fstab /mnt/fstab
umount /dev/sda1
reboot -f
sleep 5
echo b 2>/dev/null >/proc/sysrq-trigger"
else
    if [ $SAVE_CONFIG -gt 0 ]; then
        add_conffiles "$CONFFILES"
        tar czf "$CONF_TAR" -T "$CONFFILES" 2>/dev/null
        run_ramfs "zcat \"$1\" | dd of=$DEVICE bs=4096 conv=fsync
sync
mount /dev/sda1 /mnt
cp \"$CONF_TAR\" /mnt
umount /dev/sda1
reboot -f
sleep 5
echo b 2>/dev/null >/proc/sysrq-trigger"
    else
        run_ramfs "zcat \"$1\" | dd of=$DEVICE bs=4096 conv=fsync
sync
reboot -f
sleep 5
echo b 2>/dev/null >/proc/sysrq-trigger"
    fi
fi
